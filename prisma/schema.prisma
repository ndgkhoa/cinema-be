// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  tickets   Ticket[]
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  duration    Int
  releaseDate DateTime
  rating      Float
  posterUrl   String
  trailerUrl  String?
  showTimes   ShowTime[]
}

model Theater {
  id        Int      @id @default(autoincrement())
  name      String
  location  String
  rooms     Room[]
  imageUrl  String?
  createdAt DateTime @default(now())
}

model Room{
  id          Int      @id @default(autoincrement())
  name        String
  seatCapacity Int
  theaterId   Int
  theater     Theater  @relation(fields: [theaterId], references: [id])
  seats       Seat[]
  showTimes   ShowTime[]
}

model Seat {
  id        Int      @id @default(autoincrement())
  roomId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  seatNumber String
  type      String   @default("regular")
  tickets   Ticket[]
}

model ShowTime {
  id        Int      @id @default(autoincrement())
  movieId   Int
  roomId    Int
  startTime DateTime
  endTime   DateTime
  movie     Movie    @relation(fields: [movieId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  tickets   Ticket[]
}

model Ticket {
  id         Int      @id @default(autoincrement())
  userId     Int
  showTimeId Int
  seatId     Int
  price      Float
  status     String   @default("booked")
  user       User     @relation(fields: [userId], references: [id])
  showTime   ShowTime @relation(fields: [showTimeId], references: [id])
  seat       Seat     @relation(fields: [seatId], references: [id])
}
